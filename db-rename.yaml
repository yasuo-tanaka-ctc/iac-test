# パイプラインを実行するトリガーブランチ名
trigger:
  branches:
    include:
    - main
    - develop
name: Rename SQLServer Database

variables:
  vmImageName: 'ubuntu-latest'
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isRelease: $[contains(variables['System.PullRequest.SourceBranch'], 'refs/heads/release')]
  isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  isWork: $[or(contains(variables['System.PullRequest.SourceBranch'], 'refs/heads/fix/'), contains(variables['System.PullRequest.SourceBranch'], 'refs/heads/feature/'))]

pool:
  vmImage: $(vmImageName)

# 各ブランチ用job
jobs:
- jobs: MainBrancheJob
  condition: eq(variables.isMain, true)
  variables:
    SqlServer: 'groomut-dbserver-ctc.database.windows.net' # SQL Serverのホスト名またはIPアドレスを設定します
    SqlUser: 'azureuser' # SQL Serverのユーザー名を設定します
    SqlPassword: 'Passw0rd!' # SQL Serverのパスワードを設定します
    Database: 'groomut-db' # データベース名を設定します
    RenameDatabase: 'groomut-db-main' # 変更後データベース名を設定します
  # SQLCMDをインストール
  steps:
  - script: |
    sudo apt-get update
    sudo apt-get install -y mssql-tools unixodbc-dev
    echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
    source ~/.bashrc

  # SQL Serverに接続し、DB名変更クエリを実行する
  - script: |
    sqlcmd -S $(SqlServer) -U $(SqlUser) -P $(SqlPassword) -d master -Q "ALTER DATABASE [$(Database)] MODIFY NAME = [$(RenameDatabase)];"

- jobs: ReleaseBrancheJob
  condition: eq(variables.isRelease, true)
  variables:
    SqlServer: 'groomut-dbserver-ctc.database.windows.net' # SQL Serverのホスト名またはIPアドレスを設定します
    SqlUser: 'azureuser' # SQL Serverのユーザー名を設定します
    SqlPassword: 'Passw0rd!' # SQL Serverのパスワードを設定します
    Database: 'groomut-db' # データベース名を設定します
    RenameDatabase: 'groomut-db-release' # 変更後データベース名を設定します
  steps:
  # SQLCMDをインストール
  - script: |
    sudo apt-get update
    sudo apt-get install -y mssql-tools unixodbc-dev
    echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
    source ~/.bashrc

  # SQL Serverに接続し、DB名変更クエリを実行する
  - script: |
    sqlcmd -S $(SqlServer) -U $(SqlUser) -P $(SqlPassword) -d master -Q "ALTER DATABASE [$(Database)] MODIFY NAME = [$(RenameDatabase)];"

- jobs: DevelopBrancheJob
  condition: eq(variables.isDevelop, true)
  variables:
    SqlServer: 'groomut-dbserver-ctc.database.windows.net' # SQL Serverのホスト名またはIPアドレスを設定します
    SqlUser: 'azureuser' # SQL Serverのユーザー名を設定します
    SqlPassword: 'Passw0rd!' # SQL Serverのパスワードを設定します
    Database: 'groomut-db' # データベース名を設定します
    RenameDatabase: 'groomut-db-develop' # 変更後データベース名を設定します
  steps:
  # SQLCMDをインストール
  - script: |
    sudo apt-get update
    sudo apt-get install -y mssql-tools unixodbc-dev
    echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
    source ~/.bashrc

  # SQL Serverに接続し、DB名変更クエリを実行する
  - script: |
    sqlcmd -S $(SqlServer) -U $(SqlUser) -P $(SqlPassword) -d master -Q "ALTER DATABASE [$(Database)] MODIFY NAME = [$(RenameDatabase)];"

- jobs: WorkBrancheJob
  condition: eq(variables.isWork, true)
  variables:
    SqlServer: 'groomut-dbserver-ctc.database.windows.net' # SQL Serverのホスト名またはIPアドレスを設定します
    SqlUser: 'azureuser' # SQL Serverのユーザー名を設定します
    SqlPassword: 'Passw0rd!' # SQL Serverのパスワードを設定します
    Database: 'groomut-db' # データベース名を設定します
    RenameDatabase: 'groomut-db-work' # 変更後データベース名を設定します
  steps:
  # SQLCMDをインストール
  - script: |
    sudo apt-get update
    sudo apt-get install -y mssql-tools unixodbc-dev
    echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
    source ~/.bashrc

  # SQL Serverに接続し、DB名変更クエリを実行する
  - script: |
    sqlcmd -S $(SqlServer) -U $(SqlUser) -P $(SqlPassword) -d master -Q "ALTER DATABASE [$(Database)] MODIFY NAME = [$(RenameDatabase)];"
